// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DIRECT_URL")
}

model user {
  id           String   @id @default(cuid())
  username     String   @unique
  email        String
  password     String
  role         String
  createdAt    DateTime @default(now())
  warehouseIds String[] @default([])
}

model product {
  id           String   @id @default(cuid())
  name         String
  price        Int
  quantity     Int
  expiry       DateTime
  createdAt    DateTime @default(now())
  warehouseIds String[] @default([])
  sales        sale[]
}

model warehouse {
  id         String   @id @default(cuid())
  name       String
  location   String
  totalstock Int
  createdAt  DateTime @default(now())
  sales      sale[] // Relation to sales
}

// New Sale model
model sale {
  id            String   @id @default(cuid())
  invoiceNumber String   @unique
  quantity      Int
  totalAmount   Float
  saleDate      DateTime @default(now())

  // Relations
  product     product   @relation(fields: [productId], references: [id])
  productId   String
  warehouse   warehouse @relation(fields: [warehouseId], references: [id])
  warehouseId String

  // Additional metadata
  createdAt    DateTime @default(now())
  productName  String // Denormalized for historical record
  productPrice Float // Denormalized for historical record

  // Indexes for better query performance
  @@index([warehouseId])
  @@index([productId])
  @@index([saleDate])
}
